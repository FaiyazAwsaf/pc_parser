# Generated by Django 5.2.4 on 2025-08-08 19:44

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_chats', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_chats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='marketplace.chat')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('category', models.CharField(choices=[('CPU', 'CPU'), ('RAM', 'RAM'), ('Storage', 'Storage'), ('Monitor', 'Monitor'), ('Motherboard', 'Motherboard'), ('PSU', 'PSU')], max_length=20)),
                ('condition', models.CharField(choices=[('Used-Like New', 'Used-Like New'), ('Used-Good', 'Used-Good'), ('Used-Fair', 'Used-Fair')], max_length=20)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('is_available', models.BooleanField(default=True)),
                ('age', models.CharField(choices=[('0-6months', 'Less than 6 months'), ('6-12months', '6-12 months'), ('1-2years', '1-2 years'), ('2plus', '2+ years')], max_length=20, null=True)),
                ('warranty', models.CharField(choices=[('under', 'Under warranty'), ('expired', 'Warranty expired'), ('none', 'No warranty info')], max_length=20, null=True)),
                ('box_accessories', models.CharField(choices=[('box', 'Has original box'), ('accessories', 'Has all accessories'), ('missing', 'Missing items')], max_length=20, null=True)),
                ('price_type', models.CharField(choices=[('fixed', 'Fixed price'), ('negotiable', 'Price negotiable')], default='fixed', max_length=20)),
                ('availability', models.CharField(choices=[('now', 'Available now'), ('soon', 'Available soon')], default='now', max_length=20)),
                ('brand', models.CharField(choices=[('intel', 'Intel'), ('amd', 'AMD'), ('nvidia', 'NVIDIA'), ('asus', 'ASUS'), ('msi', 'MSI'), ('corsair', 'Corsair'), ('gigabyte', 'Gigabyte'), ('evga', 'EVGA'), ('samsung', 'Samsung'), ('western-digital', 'Western Digital')], max_length=30, null=True)),
                ('compatibility', models.CharField(blank=True, choices=[('lga1700', 'LGA1700'), ('am4', 'AM4'), ('am5', 'AM5'), ('ddr4', 'DDR4'), ('ddr5', 'DDR5'), ('atx', 'ATX'), ('micro-atx', 'Micro-ATX'), ('mini-itx', 'Mini-ITX')], max_length=20)),
                ('performance_tier', models.CharField(choices=[('entry', 'Entry level'), ('mid', 'Mid-range'), ('high', 'High-end')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('shipping_address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='marketplace.product')),
            ],
        ),
        migrations.AddField(
            model_name='chat',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='marketplace.product'),
        ),
        migrations.AlterUniqueTogether(
            name='chat',
            unique_together={('product', 'buyer', 'seller')},
        ),
        migrations.CreateModel(
            name='ProductRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='marketplace.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='marketplace.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('product', 'user')},
            },
        ),
        migrations.CreateModel(
            name='SellerRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='seller_rating', to='marketplace.order')),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_seller_ratings', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_ratings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('seller', 'rater')},
            },
        ),
    ]
